{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ServiceComponent = class ServiceComponent {\n  constructor(appService, meta, title, activatedRoute) {\n    this.appService = appService;\n    this.meta = meta;\n    this.title = title;\n    this.activatedRoute = activatedRoute;\n    this.host = window.location.href.split('/');\n    this.host = this.host[this.host.length - 1];\n    this.hero = this.appService.getContentData('hero');\n  }\n  ngOnInit() {\n    this.service = this.appService.getContentData('service');\n    this.routeSubscription = this.activatedRoute.params.subscribe(params => {\n      this.currentRouteParams = params['name'];\n      this.allService = this.hero && this.hero.services ? this.hero.services?.filter(ele => ele.label !== params['name']) : [];\n      this.currentSelectedBanner = this.hero && this.hero.services ? this.hero && this.hero.services?.filter(ele => ele.label === params['name']) : [];\n      if (this.hero && this.hero.allservices2) {\n        this.currentSelectedBanner = this.hero && this.hero.allservices2 ? this.hero && this.hero.allservices2?.filter(ele => ele.label === params['name']) : [];\n      }\n    });\n  }\n  toggleContent2(key, index) {\n    this.hero.hosts[key][0].faq[index].open = !this.hero.hosts[key][0].faq[index].open;\n  }\n};\nServiceComponent = __decorate([Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})], ServiceComponent);\nexport { ServiceComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAQ3BC,YAAoBC,UAAsB,EAAUC,IAAU,EAAUC,KAAY,EAASC,cAA8B;IAAvG,eAAU,GAAVH,UAAU;IAAsB,SAAI,GAAJC,IAAI;IAAgB,UAAK,GAALC,KAAK;IAAgB,mBAAc,GAAdC,cAAc;IACvG,IAAI,CAACC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAC3C,IAAI,CAACJ,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC,IAAI,CAACA,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;IAC3C,IAAI,CAACC,IAAI,GAAG,IAAI,CAACV,UAAU,CAACW,cAAc,CAAC,MAAM,CAAC;EACpD;EACFC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACb,UAAU,CAACW,cAAc,CAAC,SAAS,CAAC;IACxD,IAAI,CAACG,iBAAiB,GAAG,IAAI,CAACX,cAAc,CAACY,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACrE,IAAI,CAACE,kBAAkB,GAAGF,MAAM,CAAC,MAAM,CAAC;MACxC,IAAI,CAACG,UAAU,GAAG,IAAI,CAACR,IAAI,IAAI,IAAI,CAACA,IAAI,CAACS,QAAQ,GAAI,IAAI,CAACT,IAAI,CAACS,QAAQ,EAAEC,MAAM,CAAEC,GAAoB,IAAKA,GAAG,CAACC,KAAK,KAAKP,MAAM,CAAC,MAAM,CAAC,CAAC,GAAI,EAAE;MAC7I,IAAI,CAACQ,qBAAqB,GAAG,IAAI,CAACb,IAAI,IAAI,IAAI,CAACA,IAAI,CAACS,QAAQ,GAAG,IAAI,CAACT,IAAI,IAAI,IAAI,CAACA,IAAI,CAACS,QAAQ,EAAEC,MAAM,CAAEC,GAAoB,IAAKA,GAAG,CAACC,KAAK,KAAKP,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE;MACnK,IAAI,IAAI,CAACL,IAAI,IAAI,IAAI,CAACA,IAAI,CAACc,YAAY,EAAE;QACvC,IAAI,CAACD,qBAAqB,GAAG,IAAI,CAACb,IAAI,IAAI,IAAI,CAACA,IAAI,CAACc,YAAY,GAAG,IAAI,CAACd,IAAI,IAAI,IAAI,CAACA,IAAI,CAACc,YAAY,EAAEJ,MAAM,CAAEC,GAAoB,IAAKA,GAAG,CAACC,KAAK,KAAKP,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE;;IAE/K,CAAC,CAAC;EACJ;EACAU,cAAc,CAACC,GAAW,EAAEC,KAAa;IACvC,IAAI,CAACjB,IAAI,CAACkB,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAACG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI,GAAG,CAAC,IAAI,CAACpB,IAAI,CAACkB,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAACG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI;EACpF;CACD;AA3BYhC,gBAAgB,eAL5BD,SAAS,CAAC;EACTkC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWnC,gBAAgB,CA2B5B;SA3BYA,gBAAgB","names":["Component","ServiceComponent","constructor","appService","meta","title","activatedRoute","host","window","location","href","split","length","hero","getContentData","ngOnInit","service","routeSubscription","params","subscribe","currentRouteParams","allService","services","filter","ele","label","currentSelectedBanner","allservices2","toggleContent2","key","index","hosts","faq","open","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\accha\\Downloads\\antler technologies\\Antler-Technologies\\src\\app\\service\\service.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})\nexport class ServiceComponent implements OnInit{\n  public currentRouteParams: any;\n  public service: any;\n  public host: any;\n  public allService: any;\n  public hero: any;\n  public routeSubscription: any;\n  public currentSelectedBanner: any;\n  constructor(private appService: AppService, private meta: Meta, private title: Title,private activatedRoute: ActivatedRoute) { \n      this.host = window.location.href.split('/');\n      this.host = this.host[this.host.length - 1];\n      this.hero = this.appService.getContentData('hero');\n    }\n  ngOnInit(): void {\n    this.service = this.appService.getContentData('service');\n    this.routeSubscription = this.activatedRoute.params.subscribe(params => {\n      this.currentRouteParams = params['name'];\n      this.allService = this.hero && this.hero.services ? (this.hero.services?.filter((ele: { label: any; }) => ele.label !== params['name'])) : [];\n      this.currentSelectedBanner = this.hero && this.hero.services ? this.hero && this.hero.services?.filter((ele: { label: any; }) => ele.label === params['name']) : [];\n      if (this.hero && this.hero.allservices2) {\n        this.currentSelectedBanner = this.hero && this.hero.allservices2 ? this.hero && this.hero.allservices2?.filter((ele: { label: any; }) => ele.label === params['name']) : [];\n      }\n    });\n  }\n  toggleContent2(key: string, index: number) {\n    this.hero.hosts[key][0].faq[index].open = !this.hero.hosts[key][0].faq[index].open;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}