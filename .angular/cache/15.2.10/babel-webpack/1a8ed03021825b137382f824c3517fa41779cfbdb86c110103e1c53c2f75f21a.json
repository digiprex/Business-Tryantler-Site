{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ServiceComponent = class ServiceComponent {\n  constructor(appService, meta, title) {\n    this.appService = appService;\n    this.meta = meta;\n    this.title = title;\n    this.host = window.location.href.split('/');\n    this.host = this.host[this.host.length - 1];\n    this.hero = this.appService.getContentData('hero');\n  }\n  ngOnInit() {\n    this.service = this.appService.getContentData('service');\n    this.routeSubscription = this.activatedRoute.params.subscribe(params => {\n      this.currentRouteParams = params.name;\n      this.storiesByBharatServices = this.hero.serviceDetails ? this.hero.serviceDetails?.filter(ele => ele.param == this.currentRouteParams)[0] : {};\n      this.artIBrowService = this.hero && this.hero.services ? this.hero.services?.filter(ele => ele.label !== params.name) : [];\n      this.allService = this.hero && this.hero.services ? this.hero.services?.filter(ele => ele.label !== params.name) : [];\n      this.currentSelectedBanner = this.hero && this.hero.services ? this.hero && this.hero.services?.filter(ele => ele.label === params.name) : [];\n      if (this.hero && this.hero.allservices2) {\n        this.currentSelectedBanner = this.hero && this.hero.allservices2 ? this.hero && this.hero.allservices2?.filter(ele => ele.label === params.name) : [];\n      }\n    });\n  }\n};\nServiceComponent = __decorate([Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})], ServiceComponent);\nexport { ServiceComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAO1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,UAAsB,EAAUC,IAAU,EAAUC,KAAY;IAAhE,eAAU,GAAVF,UAAU;IAAsB,SAAI,GAAJC,IAAI;IAAgB,UAAK,GAALC,KAAK;IACzE,IAAI,CAACC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAC3C,IAAI,CAACJ,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC,IAAI,CAACA,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;IAC3C,IAAI,CAACC,IAAI,GAAG,IAAI,CAACT,UAAU,CAACU,cAAc,CAAC,MAAM,CAAC;EACpD;EACFC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACZ,UAAU,CAACU,cAAc,CAAC,SAAS,CAAC;IACxD,IAAI,CAACG,iBAAiB,GAAG,IAAI,CAACC,cAAc,CAACC,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACrE,IAAI,CAACE,kBAAkB,GAAGF,MAAM,CAACG,IAAI;MAErC,IAAI,CAACC,uBAAuB,GAAG,IAAI,CAACV,IAAI,CAACW,cAAc,GAAG,IAAI,CAACX,IAAI,CAACW,cAAc,EAAEC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,KAAK,IAAI,IAAI,CAACN,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;MAEjJ,IAAI,CAACO,eAAe,GAAG,IAAI,CAACf,IAAI,IAAI,IAAI,CAACA,IAAI,CAACgB,QAAQ,GAAI,IAAI,CAAChB,IAAI,CAACgB,QAAQ,EAAEJ,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACI,KAAK,KAAKX,MAAM,CAACG,IAAI,CAAC,GAAI,EAAE;MAC9H,IAAI,CAACS,UAAU,GAAG,IAAI,CAAClB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACgB,QAAQ,GAAI,IAAI,CAAChB,IAAI,CAACgB,QAAQ,EAAEJ,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACI,KAAK,KAAKX,MAAM,CAACG,IAAI,CAAC,GAAI,EAAE;MACzH,IAAI,CAACU,qBAAqB,GAAG,IAAI,CAACnB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACgB,QAAQ,GAAG,IAAI,CAAChB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACgB,QAAQ,EAAEJ,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACI,KAAK,KAAKX,MAAM,CAACG,IAAI,CAAC,GAAG,EAAE;MAC/I,IAAI,IAAI,CAACT,IAAI,IAAI,IAAI,CAACA,IAAI,CAACoB,YAAY,EAAE;QACvC,IAAI,CAACD,qBAAqB,GAAG,IAAI,CAACnB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACoB,YAAY,GAAG,IAAI,CAACpB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACoB,YAAY,EAAER,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACI,KAAK,KAAKX,MAAM,CAACG,IAAI,CAAC,GAAG,EAAE;;IAE3J,CAAC,CAAC;EACJ;CACD;AAxBYpB,gBAAgB,eAL5BD,SAAS,CAAC;EACTiC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWlC,gBAAgB,CAwB5B;SAxBYA,gBAAgB","names":["Component","ServiceComponent","constructor","appService","meta","title","host","window","location","href","split","length","hero","getContentData","ngOnInit","service","routeSubscription","activatedRoute","params","subscribe","currentRouteParams","name","storiesByBharatServices","serviceDetails","filter","ele","param","artIBrowService","services","label","allService","currentSelectedBanner","allservices2","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\accha\\Downloads\\antler technologies\\Antler-Technologies\\src\\app\\service\\service.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})\nexport class ServiceComponent implements OnInit{\n  public currentRouteParams: any;\n  public service: any;\n  public host: any;\n  constructor(private appService: AppService, private meta: Meta, private title: Title) { \n      this.host = window.location.href.split('/');\n      this.host = this.host[this.host.length - 1];\n      this.hero = this.appService.getContentData('hero');\n    }\n  ngOnInit(): void {\n    this.service = this.appService.getContentData('service');\n    this.routeSubscription = this.activatedRoute.params.subscribe(params => {\n      this.currentRouteParams = params.name;\n\n      this.storiesByBharatServices = this.hero.serviceDetails ? this.hero.serviceDetails?.filter((ele) => ele.param == this.currentRouteParams)[0] : {};\n\n      this.artIBrowService = this.hero && this.hero.services ? (this.hero.services?.filter((ele) => ele.label !== params.name)) : [];\n      this.allService = this.hero && this.hero.services ? (this.hero.services?.filter((ele) => ele.label !== params.name)) : [];\n      this.currentSelectedBanner = this.hero && this.hero.services ? this.hero && this.hero.services?.filter((ele) => ele.label === params.name) : [];\n      if (this.hero && this.hero.allservices2) {\n        this.currentSelectedBanner = this.hero && this.hero.allservices2 ? this.hero && this.hero.allservices2?.filter((ele) => ele.label === params.name) : [];\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}